// Copyright 2017 The go-ethereum Authors
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package ethash

import (
	"encoding/binary"
	"golang.org/x/crypto/sha3"
	"hash"
	"math/big"
	"reflect"
	"runtime"
	"sync"
	"sync/atomic"
	"time"
	"unsafe"

	"github.com/abesuite/abe-miningpool-server/common/bitutil"
	"github.com/abesuite/abe-miningpool-server/utils"
)

const EthashSeedStr = "the seed string for cache and dataset"

const (
	epochThreshold           = 8
	datasetInitBytes         = 1 << 30 // 	1G, Bytes in dataset at genesis
	datasetGrowthBytesFast   = 1 << 29 //	512M, dataset growth per epoch, before epochThreshold
	datasetGrowthBytesNormal = 1 << 24 //	16M, (1 << 23 //	8M) 	//	dataset growth per epoch, after epochThreshold and normal
	cacheInitBytes           = 1 << 24 // 	16M, Bytes in cache at genesis
	cacheGrowthBytesFast     = 1 << 23 //	8M, Cache growth per epoch, before epochThreshold
	cacheGrowthBytesNormal   = 1 << 18 //	256K, // (1 << 17 //	128K)     // Cache growth per epoch, after epochThreshold and normal

	mixBytes       = 128 // Width of mix
	hashBytes      = 64  // Hash length in bytes
	hashWords      = 16  // Number of 32 bit ints in a hash
	datasetParents = 256 // Number of parents of each dataset element
	cacheRounds    = 3   // Number of rounds in cache production
	loopAccesses   = 64  // Number of accesses in hashimoto loop
)

// cacheSize() returns the size of the ethash verification cache that belongs to a certain
// block number.
func cacheSize(epoch int) uint64 {
	if epoch < maxEpoch {
		return cacheSizes[epoch]
	}
	return calcCacheSize(epoch)
}

// calcCacheSize() calculates the cache size for epoch. The cache size grows linearly,
// however, we always take the highest prime below the linearly growing threshold in order
// to reduce the risk of accidental regularities leading to cyclic behavior.
//
//	The cache size grows linearly in two phases respectively, fast-growth phase and normal-growth phase.
func calcCacheSize(epoch int) uint64 {
	size := uint64(cacheInitBytes)
	if epoch < epochThreshold {
		size = size + cacheGrowthBytesFast*uint64(epoch)
	} else {
		size = size + cacheGrowthBytesFast*uint64(epochThreshold) + cacheGrowthBytesNormal*uint64(epoch-epochThreshold)
	}
	size = size - hashBytes

	//	To be safe, we use ProablyPrime(32) rather than ProablyPrime(1) as in Ethereum.
	for !new(big.Int).SetUint64(size / hashBytes).ProbablyPrime(32) { // Always accurate for n < 2^64
		size -= 2 * hashBytes
	}
	return size
}

// datasetSize() returns the size of the ethash mining dataset that belongs to a certain
// block number.
func datasetSize(epoch int) uint64 {
	if epoch < maxEpoch {
		return datasetSizes[epoch]
	}
	return calcDatasetSize(epoch)
}

// calcDatasetSize() calculates the dataset size for epoch. The dataset size grows linearly,
// however, we always take the highest prime below the linearly growing threshold in order
// to reduce the risk of accidental regularities leading to cyclic behavior.
func calcDatasetSize(epoch int) uint64 {
	size := uint64(datasetInitBytes)
	if epoch < epochThreshold {
		size = size + datasetGrowthBytesFast*uint64(epoch)
	} else {
		size = size + datasetGrowthBytesFast*uint64(epochThreshold) + datasetGrowthBytesNormal*uint64(epoch-epochThreshold)
	}
	size = size - mixBytes

	//	To be safe, we use ProablyPrime(32) rather than ProablyPrime(1) as in Ethereum.
	for !new(big.Int).SetUint64(size / mixBytes).ProbablyPrime(32) { // Always accurate for n < 2^64
		size -= 2 * mixBytes
	}
	return size
}

// hasher() is a repetitive hasher allowing the same hash data structures to be
// reused between hash runs instead of requiring new ones to be created.
type hasher func(dest []byte, data []byte)

// makeHasher() creates a repetitive hasher, allowing the same hash data structures to
// be reused between hash runs instead of requiring new ones to be created. The returned
// function is not thread safe!
func makeHasher(h hash.Hash) hasher {
	// sha3.state supports Read to get the sum, use it to avoid the overhead of Sum.
	// Read alters the state but we reset the hash before every operation.
	type readerHash interface {
		hash.Hash
		Read([]byte) (int, error)
	}
	rh, ok := h.(readerHash)
	if !ok {
		panic("can't find Read method on hash")
	}
	outputLen := rh.Size()
	return func(dest []byte, data []byte) {
		rh.Reset()

		_, err := rh.Write(data)
		if err != nil {
			log.Errorf("Error in calling hasher: %v", err)
		}

		_, err = rh.Read(dest[:outputLen])
		if err != nil {
			log.Errorf("Error in calling hasher: %v", err)
		}
	}
}

// ethashSeed() generates the seed to use for generating a verification cache and the mining dataset.
func ethashSeed(epoch int) []byte {
	//	202207, we use a random initial seed (obtained by hash a constant string), rather than all-zero as Ethereum
	seed := make([]byte, 32)
	initialSeed := sha3.Sum256([]byte(EthashSeedStr))
	copy(seed, initialSeed[:])

	if epoch == 0 {
		return seed
	}

	// 202207, We use standard SHA3-256, rather than the LegacyKeccak256
	//keccak256 := makeHasher(sha3.NewLegacyKeccak256())
	sha3256 := makeHasher(sha3.New256())
	for i := 0; i < epoch; i++ {
		sha3256(seed, seed)
	}

	return seed
}

// generateCache() creates a verification cache of a given size for an input seed.
// The cache production process involves first sequentially filling up 32 MB of
// memory, then performing two passes of Sergio Demian Lerner's RandMemoHash
// algorithm from Strict Memory Hard Hashing Functions (2014). The output is a
// set of 524288 64-byte values.
// This method places the result into dest in machine byte order.
func generateCache(dest []uint32, epoch int, seed []byte) {
	// Print some debug logs to allow analysis on low end devices

	start := time.Now()
	defer func() {
		elapsed := time.Since(start)

		log.Infof("Generated ethash cache for epoch %d with %v", epoch, elapsed)
	}()

	// Convert our destination slice to a byte buffer
	var cache []byte
	cacheHdr := (*reflect.SliceHeader)(unsafe.Pointer(&cache))
	dstHdr := (*reflect.SliceHeader)(unsafe.Pointer(&dest))
	cacheHdr.Data = dstHdr.Data
	cacheHdr.Len = dstHdr.Len * 4
	cacheHdr.Cap = dstHdr.Cap * 4

	// Calculate the number of theoretical rows (we'll store in one buffer nonetheless)
	size := uint64(len(cache))
	rows := int(size) / hashBytes

	// Start a monitoring goroutine to report progress on low end devices
	var progress uint32

	done := make(chan struct{})
	defer close(done)

	go func() {
		for {
			select {
			case <-done:
				return
			case <-time.After(3 * time.Second):
				log.Infof("Generating ethash cache for epoch %d: %v percentage with %v", epoch, atomic.LoadUint32(&progress)*100/uint32(rows)/(cacheRounds+1), time.Since(start))
			}
		}
	}()
	// Create a hasher to reuse between invocations
	//	We use a standard SHA3-512, rather than LegacyKeccak512
	//	keccak512 := makeHasher(sha3.NewLegacyKeccak512())
	sha3512 := makeHasher(sha3.New512())

	// Sequentially produce the initial dataset
	sha3512(cache, seed)
	for offset := uint64(hashBytes); offset < size; offset += hashBytes {
		sha3512(cache[offset:], cache[offset-hashBytes:offset])
		atomic.AddUint32(&progress, 1)
	}
	// Use a low-round version of randmemohash
	temp := make([]byte, hashBytes)

	for i := 0; i < cacheRounds; i++ {
		for j := 0; j < rows; j++ {
			var (
				srcOff = ((j - 1 + rows) % rows) * hashBytes
				dstOff = j * hashBytes
				xorOff = (binary.LittleEndian.Uint32(cache[dstOff:]) % uint32(rows)) * hashBytes
			)
			bitutil.XORBytes(temp, cache[srcOff:srcOff+hashBytes], cache[xorOff:xorOff+hashBytes])
			sha3512(cache[dstOff:], temp)

			atomic.AddUint32(&progress, 1)
		}
	}
	// Swap the byte order on big endian systems and return
	if !isLittleEndian() {
		swap(cache)
	}
}

// swap() changes the byte order of the buffer assuming a uint32 representation.
func swap(buffer []byte) {
	for i := 0; i < len(buffer); i += 4 {
		binary.BigEndian.PutUint32(buffer[i:], binary.LittleEndian.Uint32(buffer[i:]))
	}
}

// fnv() is an algorithm inspired by the FNV hash, which in some cases is used as
// a non-associative substitute for XOR. Note that we multiply the prime with
// the full 32-bit input, in contrast with the FNV-1 spec which multiplies the
// prime with one byte (octet) in turn.
func fnv(a, b uint32) uint32 {
	return a*0x01000193 ^ b
}

// fnvHash() mixes in data into mix using the ethash fnv method.
func fnvHash(mix []uint32, data []uint32) {
	for i := 0; i < len(mix); i++ {
		mix[i] = mix[i]*0x01000193 ^ data[i]
	}
}

// generateDatasetItem combines data from 256 pseudorandomly selected cache nodes,
// and hashes that to compute a single dataset node.
func generateDatasetItem(cache []uint32, index uint32, sha3512 hasher) []byte {
	// Calculate the number of theoretical rows (we use one buffer nonetheless)
	rows := uint32(len(cache) / hashWords)

	// Initialize the mix
	mix := make([]byte, hashBytes)

	binary.LittleEndian.PutUint32(mix, cache[(index%rows)*hashWords]^index)
	for i := 1; i < hashWords; i++ {
		binary.LittleEndian.PutUint32(mix[i*4:], cache[(index%rows)*hashWords+uint32(i)])
	}
	sha3512(mix, mix)

	// Convert the mix to uint32s to avoid constant bit shifting
	intMix := make([]uint32, hashWords)
	for i := 0; i < len(intMix); i++ {
		intMix[i] = binary.LittleEndian.Uint32(mix[i*4:])
	}
	// fnv it with a lot of random cache nodes based on index
	for i := uint32(0); i < datasetParents; i++ {
		parent := fnv(index^i, intMix[i%16]) % rows
		fnvHash(intMix, cache[parent*hashWords:])
	}
	// Flatten the uint32 mix into a binary one and return
	for i, val := range intMix {
		binary.LittleEndian.PutUint32(mix[i*4:], val)
	}
	sha3512(mix, mix)
	return mix
}

// generateDataset() generates the entire ethash dataset for mining.
// This method places the result into dest in machine byte order.
func generateDataset(dest []uint32, epoch int, cache []uint32) {
	// Print some debug logs to allow analysis on low end devices

	start := time.Now()
	defer func() {
		elapsed := time.Since(start)
		log.Infof("Generated ethash data set for epoch %d with %v", epoch, elapsed)
	}()

	// Figure out whether the bytes need to be swapped for the machine
	swapped := !isLittleEndian()

	// Convert our destination slice to a byte buffer
	var dataset []byte
	datasetHdr := (*reflect.SliceHeader)(unsafe.Pointer(&dataset))
	destHdr := (*reflect.SliceHeader)(unsafe.Pointer(&dest))
	datasetHdr.Data = destHdr.Data
	datasetHdr.Len = destHdr.Len * 4
	datasetHdr.Cap = destHdr.Cap * 4

	// Generate the dataset on many goroutines since it takes a while
	threads := runtime.NumCPU()
	size := uint64(len(dataset))

	var pend sync.WaitGroup
	pend.Add(threads)

	var progress uint64
	for i := 0; i < threads; i++ {
		go func(id int) {
			defer pend.Done()

			// Create a hasher to reuse between invocations
			//	We use standard SHA3-512, rather than the LegacyKeccak512
			// keccak512 := makeHasher(sha3.NewLegacyKeccak512())
			sha3512 := makeHasher(sha3.New512())

			// Calculate the data segment this thread should generate
			batch := (size + hashBytes*uint64(threads) - 1) / (hashBytes * uint64(threads))
			first := uint64(id) * batch
			limit := first + batch
			if limit > size/hashBytes {
				limit = size / hashBytes
			}
			// Calculate the dataset segment
			percent := size / hashBytes / 100
			for index := first; index < limit; index++ {
				item := generateDatasetItem(cache, uint32(index), sha3512)
				if swapped {
					swap(item)
				}
				copy(dataset[index*hashBytes:], item)

				if status := atomic.AddUint64(&progress, 1); status%percent == 0 {
					log.Infof("Generating DAG of epoch %d in progress: percentage %v with %v", epoch, (status*100)/(size/hashBytes), time.Since(start))
					//fmt.Println("TEST: Generating DAG of epoch:", epoch, "in progress: percentage", (status*100)/(size/hashBytes), "with %v", time.Since(start))
				}
			}
		}(i)
	}
	// Wait for all the generators to finish and return
	pend.Wait()
}

// hashimoto() aggregates data from the full dataset in order to produce our final
// value for a particular header hash and nonce.
func hashimoto(contentHash utils.Hash, nonce uint64, size uint64, lookup func(index uint32) []uint32) ([]byte, utils.Hash) {
	// Calculate the number of theoretical rows (we use one buffer nonetheless)
	rows := uint32(size / mixBytes)

	// Combine contentHash + nonce into a 64 byte seed
	seedTmp := make([]byte, utils.HashSize+8)
	copy(seedTmp, contentHash[:])
	binary.LittleEndian.PutUint64(seedTmp[utils.HashSize:], nonce)

	// we use the standard SHA3-512, rather than LegacyKeccak512
	// seed = crypto.Keccak512(seed)
	//seed := make([]byte, 64)
	seed := sha3.Sum512(seedTmp)
	//copy(seed, hashTmp[:])

	seedHead := binary.LittleEndian.Uint32(seed[:])

	// Start the mix with replicated seed
	//	202207: mix has the same size as utils.HashSize, since the digest is obtained from mix
	//	202207: this means mixBytes is set according to utils.HashSize
	mix := make([]uint32, mixBytes/4)
	for i := 0; i < len(mix); i++ {
		mix[i] = binary.LittleEndian.Uint32(seed[i%16*4:])
	}
	// Mix in random dataset nodes
	temp := make([]uint32, len(mix))

	for i := 0; i < loopAccesses; i++ {
		parent := fnv(uint32(i)^seedHead, mix[i%len(mix)]) % rows
		for j := uint32(0); j < mixBytes/hashBytes; j++ {
			copy(temp[j*hashWords:], lookup(2*parent+j))
		}
		fnvHash(mix, temp)
	}
	// Compress mix
	for i := 0; i < len(mix); i += 4 {
		mix[i/4] = fnv(fnv(fnv(mix[i], mix[i+1]), mix[i+2]), mix[i+3])
	}
	mix = mix[:len(mix)/4]

	// ETH uses common.HashLength = 32.
	// It does not matter, as MixDigest is only regarded as a hash, not really being a hash.
	//digest := make([]byte, common.HashLength)
	digest := make([]byte, utils.HashSize)
	for i, val := range mix {
		binary.LittleEndian.PutUint32(digest[i*4:], val)
	}

	//	Here we use utils.ChainHash, which is actually SHA3-256, rather than the LegacyKeccak256
	// return digest, crypto.Keccak256(append(seed, digest...))
	return digest, utils.ChainHash(append(seed[:], digest...))
}

// hashimotoLight() aggregates data from the full dataset (using only a small
// in-memory cache) in order to produce our final value for a particular header
// hash and nonce.
func hashimotoLight(size uint64, cache []uint32, contentHash utils.Hash, nonce uint64) ([]byte, utils.Hash) {
	//	we use standard SHA3-512, rather than the LegacyKeccak512
	//keccak512 := makeHasher(sha3.NewLegacyKeccak512())
	sha3512 := makeHasher(sha3.New512())

	lookup := func(index uint32) []uint32 {
		rawData := generateDatasetItem(cache, index, sha3512)

		data := make([]uint32, len(rawData)/4)
		for i := 0; i < len(data); i++ {
			data[i] = binary.LittleEndian.Uint32(rawData[i*4:])
		}
		return data
	}
	return hashimoto(contentHash, nonce, size, lookup)
}

// hashimotoFull() aggregates data from the full dataset (using the full in-memory
// dataset) in order to produce our final value for a particular header hash and
// nonce.
func hashimotoFull(dataset []uint32, contentHash utils.Hash, nonce uint64) ([]byte, utils.Hash) {
	lookup := func(index uint32) []uint32 {
		offset := index * hashWords
		return dataset[offset : offset+hashWords]
	}
	return hashimoto(contentHash, nonce, uint64(len(dataset))*4, lookup)
}

const maxEpoch = 2048

// datasetSizes is a lookup table for the abelethash dataset size for the first 2048
// epochs (i.e. 4000*2048 = 8,192,000 blocks).
var datasetSizes = [maxEpoch]uint64{
	1073739904, 1610610304, 2147483264, 2684352896, 3221224064, 3758091136, 4294962304, 4831835776,
	5368706944, 5385484928, 5402263424, 5419040384, 5435816576, 5452594816, 5469367936, 5486148736,
	5502925952, 5519703424, 5536481152, 5553256064, 5570032768, 5586811264, 5603585408, 5620366208,
	5637143936, 5653921408, 5670694784, 5687474048, 5704251008, 5721030272, 5737806208, 5754583936,
	5771358592, 5788137856, 5804911232, 5821692544, 5838468992, 5855247488, 5872024448, 5888799872,
	5905576832, 5922352768, 5939132288, 5955911296, 5972688256, 5989465472, 6006241408, 6023015552,
	6039796096, 6056574848, 6073351808, 6090128768, 6106906496, 6123680896, 6140459648, 6157237376,
	6174009728, 6190792064, 6207569792, 6224345216, 6241124224, 6257899136, 6274676864, 6291454336,
	6308232064, 6325006208, 6341784704, 6358562176, 6375337856, 6392119168, 6408895616, 6425673344,
	6442444672, 6459223424, 6476004224, 6492781952, 6509555072, 6526336384, 6543112832, 6559888768,
	6576662912, 6593443456, 6610219648, 6626999168, 6643777408, 6660552832, 6677330048, 6694107776,
	6710882176, 6727662976, 6744437632, 6761213824, 6777993856, 6794770816, 6811549312, 6828326528,
	6845101696, 6861880448, 6878655104, 6895433344, 6912212864, 6928988288, 6945764992, 6962544256,
	6979317376, 6996093824, 7012875392, 7029652352, 7046427776, 7063207808, 7079980928, 7096759424,
	7113536896, 7130315392, 7147092352, 7163865728, 7180648064, 7197424768, 7214196608, 7230975104,
	7247755904, 7264533376, 7281308032, 7298088832, 7314864512, 7331643008, 7348419712, 7365196672,
	7381973888, 7398750592, 7415528576, 7432302208, 7449080192, 7465860992, 7482635648, 7499412608,
	7516192384, 7532967296, 7549745792, 7566524032, 7583300992, 7600075136, 7616854912, 7633629824,
	7650410368, 7667187328, 7683961984, 7700739712, 7717519232, 7734295424, 7751069056, 7767849088,
	7784626816, 7801405312, 7818179968, 7834957184, 7851732352, 7868512384, 7885287808, 7902067072,
	7918844288, 7935622784, 7952400256, 7969176704, 7985953408, 8002730368, 8019508096, 8036285056,
	8053062272, 8069838464, 8086616704, 8103393664, 8120171392, 8136949376, 8153726848, 8170503296,
	8187280768, 8204058496, 8220834176, 8237612672, 8254389376, 8271167104, 8287944064, 8304715136,
	8321497984, 8338274432, 8355052928, 8371828352, 8388606592, 8405384576, 8422161536, 8438939008,
	8455715456, 8472492928, 8489270656, 8506045312, 8522823808, 8539602304, 8556378752, 8573154176,
	8589933952, 8606705024, 8623487872, 8640264064, 8657040256, 8673820544, 8690592128, 8707374464,
	8724151424, 8740928384, 8757704576, 8774480768, 8791260032, 8808034432, 8824812928, 8841591424,
	8858366336, 8875147136, 8891923328, 8908700288, 8925478784, 8942250368, 8959032704, 8975809664,
	8992584064, 9009362048, 9026141312, 9042917504, 9059694208, 9076471424, 9093250688, 9110027648,
	9126803584, 9143581312, 9160356224, 9177134464, 9193910144, 9210690688, 9227465344, 9244244864,
	9261021824, 9277799296, 9294574208, 9311351936, 9328131968, 9344907392, 9361685888, 9378463616,
	9395239808, 9412016512, 9428795008, 9445570688, 9462346624, 9479121536, 9495903616, 9512678528,
	9529456256, 9546233728, 9563011456, 9579788672, 9596567168, 9613343104, 9630121856, 9646898816,
	9663675776, 9680449664, 9697230464, 9714003584, 9730772608, 9747561088, 9764338816, 9781116544,
	9797892992, 9814670464, 9831439232, 9848224384, 9865000576, 9881772416, 9898556288, 9915333248,
	9932108672, 9948888448, 9965666176, 9982441088, 9999219584, 10015996544, 10032774016, 10049548928,
	10066329472, 10083105152, 10099878784, 10116660608, 10133437312, 10150213504, 10166991232, 10183766144,
	10200545408, 10217322112, 10234099328, 10250876032, 10267656064, 10284429184, 10301209472, 10317987712,
	10334763392, 10351541632, 10368318592, 10385096576, 10401867136, 10418647424, 10435425664, 10452203648,
	10468982144, 10485759104, 10502533504, 10519313536, 10536091264, 10552867712, 10569642368, 10586423168,
	10603200128, 10619976064, 10636754048, 10653531776, 10670307968, 10687086464, 10703863168, 10720639616,
	10737414784, 10754190976, 10770971264, 10787747456, 10804525184, 10821301888, 10838078336, 10854858368,
	10871631488, 10888412032, 10905188992, 10921964672, 10938742912, 10955518592, 10972298368, 10989074816,
	11005851776, 11022627712, 11039403904, 11056184704, 11072960896, 11089737856, 11106514816, 11123293568,
	11140065152, 11156845696, 11173624192, 11190402688, 11207179136, 11223957376, 11240734592, 11257511296,
	11274285952, 11291065472, 11307842432, 11324616832, 11341395584, 11358172288, 11374950016, 11391721856,
	11408504192, 11425283456, 11442061184, 11458837888, 11475611776, 11492392064, 11509169024, 11525944448,
	11542724224, 11559500672, 11576277376, 11593056128, 11609830016, 11626607488, 11643387776, 11660161664,
	11676940928, 11693718656, 11710496128, 11727273088, 11744050048, 11760824704, 11777604736, 11794381952,
	11811157888, 11827932544, 11844713344, 11861486464, 11878268032, 11895044992, 11911822976, 11928600448,
	11945375872, 11962151296, 11978928512, 11995708288, 12012486272, 12029255552, 12046039168, 12062813824,
	12079594624, 12096371072, 12113147264, 12129924992, 12146703232, 12163481216, 12180255872, 12197034112,
	12213811328, 12230590336, 12247365248, 12264143488, 12280920448, 12297694592, 12314475392, 12331253632,
	12348029312, 12364805248, 12381580928, 12398357632, 12415138432, 12431916416, 12448692352, 12465467776,
	12482245504, 12499025536, 12515801728, 12532577152, 12549354368, 12566129536, 12582911872, 12599688064,
	12616463488, 12633239936, 12650019968, 12666795136, 12683574656, 12700350592, 12717128576, 12733906816,
	12750680192, 12767460736, 12784236928, 12801014656, 12817789312, 12834568832, 12851345792, 12868122496,
	12884901248, 12901672832, 12918455168, 12935232896, 12952009856, 12968786816, 12985563776, 13002341504,
	13019115392, 13035895168, 13052673152, 13069446272, 13086227072, 13103000192, 13119782528, 13136559232,
	13153329536, 13170111872, 13186884736, 13203667072, 13220445824, 13237221248, 13254000512, 13270777472,
	13287553408, 13304331904, 13321108096, 13337885824, 13354663808, 13371439232, 13388210816, 13404995456,
	13421771392, 13438546048, 13455326848, 13472103808, 13488875648, 13505657728, 13522435712, 13539210112,
	13555989376, 13572766336, 13589544832, 13606320512, 13623097472, 13639874944, 13656652928, 13673430656,
	13690207616, 13706982272, 13723762048, 13740536704, 13757316224, 13774090112, 13790869376, 13807647872,
	13824425344, 13841202304, 13857978752, 13874754688, 13891533184, 13908311168, 13925085056, 13941866368,
	13958643584, 13975417216, 13992197504, 14008973696, 14025752192, 14042528384, 14059301504, 14076083584,
	14092852352, 14109635968, 14126407552, 14143188608, 14159968384, 14176741504, 14193521024, 14210301824,
	14227067264, 14243855488, 14260630144, 14277409408, 14294187904, 14310961792, 14327738752, 14344518784,
	14361296512, 14378071424, 14394848128, 14411627392, 14428402304, 14445181568, 14461959808, 14478737024,
	14495511424, 14512291712, 14529064832, 14545845632, 14562618496, 14579398784, 14596172672, 14612953984,
	14629724288, 14646503296, 14663284864, 14680061056, 14696835968, 14713616768, 14730392192, 14747172736,
	14763947648, 14780725376, 14797499776, 14814276992, 14831056256, 14847836032, 14864612992, 14881388672,
	14898165376, 14914944896, 14931721856, 14948497024, 14965276544, 14982053248, 14998830976, 15015605888,
	15032385152, 15049154944, 15065939072, 15082715008, 15099493504, 15116269184, 15133042304, 15149824384,
	15166602368, 15183378304, 15200154496, 15216931712, 15233708416, 15250489216, 15267265408, 15284043136,
	15300819584, 15317596544, 15334374784, 15351151744, 15367929728, 15384706432, 15401481856, 15418258816,
	15435037568, 15451815296, 15468589184, 15485369216, 15502146944, 15518924416, 15535699072, 15552478336,
	15569254528, 15586031488, 15602809472, 15619586432, 15636364928, 15653141888, 15669918848, 15686696576,
	15703474048, 15720251264, 15737027456, 15753804928, 15770582656, 15787358336, 15804132224, 15820909696,
	15837691264, 15854466944, 15871244672, 15888020608, 15904799104, 15921577088, 15938354816, 15955129472,
	15971907968, 15988684928, 16005460864, 16022241152, 16039012736, 16055794816, 16072571264, 16089346688,
	16106125184, 16122904192, 16139678848, 16156453504, 16173236096, 16190012032, 16206790528, 16223567744,
	16240344704, 16257117824, 16273898624, 16290668672, 16307449216, 16324230016, 16341006464, 16357783168,
	16374561664, 16391337856, 16408116352, 16424892032, 16441668224, 16458448768, 16475224448, 16492001408,
	16508779648, 16525555328, 16542330752, 16559110528, 16575888512, 16592665472, 16609442944, 16626218624,
	16642996096, 16659773824, 16676552576, 16693328768, 16710095488, 16726883968, 16743661184, 16760436608,
	16777214336, 16793992832, 16810768768, 16827542656, 16844323712, 16861101952, 16877876864, 16894653056,
	16911431296, 16928207488, 16944987776, 16961763968, 16978540928, 16995319168, 17012096896, 17028870784,
	17045649536, 17062426496, 17079205504, 17095978112, 17112759424, 17129536384, 17146314368, 17163089792,
	17179864192, 17196644992, 17213423488, 17230198912, 17246976896, 17263754624, 17280530048, 17297309312,
	17314085504, 17330863744, 17347640192, 17364413824, 17381190016, 17397972608, 17414748544, 17431527296,
	17448303232, 17465081728, 17481857408, 17498635904, 17515409024, 17532189824, 17548966016, 17565741184,
	17582519168, 17599296128, 17616076672, 17632852352, 17649630848, 17666403968, 17683178368, 17699962496,
	17716739968, 17733517184, 17750293888, 17767070336, 17783848832, 17800625536, 17817402752, 17834178944,
	17850955648, 17867732864, 17884511872, 17901287296, 17918058112, 17934843776, 17951609216, 17968397696,
	17985175424, 18001952128, 18018728576, 18035503232, 18052283264, 18069056384, 18085837184, 18102613376,
	18119388544, 18136170368, 18152947328, 18169724288, 18186498944, 18203275648, 18220048768, 18236833408,
	18253610624, 18270387328, 18287163008, 18303941504, 18320717696, 18337496192, 18354269056, 18371050112,
	18387828352, 18404605568, 18421379456, 18438154624, 18454937216, 18471713408, 18488488576, 18505268864,
	18522045056, 18538823552, 18555600512, 18572377216, 18589154432, 18605931392, 18622708352, 18639486848,
	18656262784, 18673037696, 18689814656, 18706594688, 18723370112, 18740150144, 18756927104, 18773701504,
	18790481536, 18807258752, 18824034688, 18840813184, 18857585792, 18874365824, 18891145088, 18907911808,
	18924697216, 18941475968, 18958250368, 18975028096, 18991807616, 19008584576, 19025360768, 19042140032,
	19058916992, 19075694464, 19092468608, 19109247104, 19126026112, 19142802304, 19159578752, 19176355456,
	19193133952, 19209910144, 19226688896, 19243466624, 19260243584, 19277018752, 19293797504, 19310572672,
	19327352192, 19344129664, 19360906624, 19377681536, 19394460544, 19411236736, 19428008576, 19444790656,
	19461568384, 19478344064, 19495124864, 19511901824, 19528678784, 19545453952, 19562226304, 19579002496,
	19595787136, 19612564096, 19629339776, 19646115968, 19662895744, 19679670656, 19696450688, 19713227648,
	19730003584, 19746781568, 19763557504, 19780336768, 19797113216, 19813891712, 19830666368, 19847444608,
	19864222592, 19880991616, 19897776512, 19914552704, 19931329408, 19948107392, 19964885888, 19981661312,
	19998441088, 20015211904, 20031993472, 20048772736, 20065547648, 20082326912, 20099103872, 20115880832,
	20132657024, 20149436288, 20166212992, 20182989184, 20199764096, 20216541824, 20233319552, 20250098048,
	20266874752, 20283654016, 20300427904, 20317207424, 20333985664, 20350760576, 20367539072, 20384316032,
	20401083776, 20417869952, 20434646912, 20451422848, 20468202112, 20484977792, 20501757824, 20518534016,
	20535312256, 20552089472, 20568861056, 20585643392, 20602420864, 20619195776, 20635966592, 20652750208,
	20669528192, 20686304896, 20703082112, 20719859584, 20736635776, 20753415808, 20770191488, 20786968448,
	20803746944, 20820520064, 20837301376, 20854077824, 20870854016, 20887632512, 20904409984, 20921186432,
	20937962624, 20954742656, 20971515776, 20988295808, 21005074304, 21021848704, 21038626688, 21055404928,
	21072181888, 21088958848, 21105736832, 21122514304, 21139292032, 21156069248, 21172845952, 21189622144,
	21206397568, 21223175552, 21239954816, 21256724096, 21273509248, 21290286208, 21307063168, 21323837312,
	21340616576, 21357394048, 21374169728, 21390949504, 21407727232, 21424499584, 21441281152, 21458058112,
	21474829696, 21491613568, 21508386176, 21525166976, 21541944448, 21558721664, 21575499392, 21592276864,
	21609052288, 21625830784, 21642607744, 21659385728, 21676160384, 21692932736, 21709716352, 21726491008,
	21743271808, 21760048256, 21776820608, 21793603456, 21810378112, 21827157376, 21843922816, 21860712064,
	21877489024, 21894265216, 21911040128, 21927819904, 21944597632, 21961375616, 21978150016, 21994928512,
	22011704192, 22028481152, 22045260928, 22062038912, 22078815872, 22095591808, 22112365952, 22129146752,
	22145924224, 22162702208, 22179476864, 22196255104, 22213031552, 22229810816, 22246584704, 22263361664,
	22280142208, 22296919936, 22313696128, 22330473856, 22347250048, 22364027264, 22380804736, 22397581952,
	22414359424, 22431136384, 22447913344, 22464689792, 22481468288, 22498239616, 22515023744, 22531800448,
	22548574592, 22565355392, 22582132096, 22598901632, 22615686272, 22632462976, 22649236096, 22666018432,
	22682793856, 22699572608, 22716350336, 22733126272, 22749904768, 22766681216, 22783457408, 22800236416,
	22817013376, 22833789568, 22850564992, 22867342976, 22884118144, 22900898432, 22917670016, 22934452096,
	22951228288, 22968007808, 22984783232, 23001560704, 23018338688, 23035117184, 23051892608, 23068671872,
	23085448832, 23102221952, 23119002496, 23135772544, 23152557184, 23169331072, 23186110592, 23202888832,
	23219662208, 23236442752, 23253220736, 23269996928, 23286773632, 23303551616, 23320330112, 23337106816,
	23353881472, 23370659456, 23387437952, 23404210048, 23420992384, 23437770368, 23454541696, 23471325056,
	23488101248, 23504879488, 23521647488, 23538431872, 23555207296, 23571988096, 23588763776, 23605536896,
	23622319744, 23639093888, 23655873664, 23672651648, 23689422464, 23706205568, 23722981504, 23739756928,
	23756533376, 23773314944, 23790088064, 23806868864, 23823644288, 23840422784, 23857201024, 23873977216,
	23890754176, 23907529088, 23924309888, 23941083008, 23957861504, 23974638208, 23991416704, 24008192896,
	24024969856, 24041746304, 24058526848, 24075301504, 24092081792, 24108856448, 24125635712, 24142411648,
	24159190912, 24175966336, 24192745088, 24209522048, 24226299008, 24243074432, 24259847296, 24276629632,
	24293406848, 24310183808, 24326961536, 24343735424, 24360517504, 24377292416, 24394070912, 24410849152,
	24427624576, 24444403072, 24461180288, 24477957248, 24494734976, 24511511936, 24528288896, 24545066368,
	24561839488, 24578619776, 24595396736, 24612174976, 24628951936, 24645728896, 24662507392, 24679283584,
	24696055424, 24712838272, 24729612928, 24746388608, 24763170688, 24779944064, 24796724608, 24813501824,
	24830273408, 24847054976, 24863829632, 24880609408, 24897387904, 24914165632, 24930942592, 24947714432,
	24964496512, 24981271936, 24998048384, 25014828928, 25031604608, 25048383104, 25065159296, 25081937792,
	25098714752, 25115490944, 25132264576, 25149046144, 25165822592, 25182597248, 25199377792, 25216150912,
	25232930176, 25249709696, 25266486656, 25283262848, 25300034944, 25316816768, 25333596032, 25350371456,
	25367149952, 25383927424, 25400699264, 25417480832, 25434259072, 25451035264, 25467813248, 25484588672,
	25501365632, 25518142336, 25534914688, 25551696512, 25568472448, 25585251712, 25602030208, 25618803328,
	25635585152, 25652361088, 25669140352, 25685916544, 25702692992, 25719471488, 25736249216, 25753026176,
	25769799296, 25786580608, 25803356032, 25820130176, 25836910976, 25853687936, 25870464128, 25887240832,
	25904019584, 25920797824, 25937575808, 25954351744, 25971129728, 25987899008, 26004684416, 26021458048,
	26038237312, 26055015808, 26071793536, 26088566144, 26105347456, 26122125184, 26138900864, 26155677568,
	26172456064, 26189234048, 26206009472, 26222786432, 26239565696, 26256339584, 26273118848, 26289894272,
	26306672768, 26323451008, 26340227456, 26357003648, 26373782912, 26390560384, 26407336832, 26424113792,
	26440892288, 26457666944, 26474442112, 26491223168, 26508000128, 26524776064, 26541552256, 26558332288,
	26575107968, 26591887232, 26608660096, 26625441664, 26642217344, 26658994304, 26675771776, 26692548992,
	26709327488, 26726104448, 26742882176, 26759656064, 26776432768, 26793209984, 26809990016, 26826768256,
	26843545472, 26860322176, 26877099904, 26893876096, 26910651776, 26927426432, 26944207232, 26960983424,
	26977761152, 26994540416, 27011317376, 27028094848, 27044871296, 27061648256, 27078424448, 27095198848,
	27111978368, 27128757632, 27145534336, 27162310528, 27179086976, 27195867008, 27212642176, 27229417088,
	27246196864, 27262972544, 27279749248, 27296527744, 27313307264, 27330082432, 27346859648, 27363638912,
	27380416384, 27397193344, 27413969536, 27430748032, 27447524224, 27464299904, 27481077376, 27497856896,
	27514628224, 27531410048, 27548181376, 27564964736, 27581742976, 27598518656, 27615297152, 27632072576,
	27648844672, 27665626496, 27682406272, 27699182464, 27715959424, 27732737152, 27749510528, 27766292096,
	27783069568, 27799846784, 27816622976, 27833400704, 27850178432, 27866955392, 27883729024, 27900508544,
	27917286272, 27934063232, 27950837632, 27967616896, 27984394624, 28001168512, 28017947264, 28034726528,
	28051501696, 28068280192, 28085057408, 28101836416, 28118612864, 28135391104, 28152163712, 28168944256,
	28185721216, 28202498176, 28219274624, 28236050816, 28252831616, 28269606784, 28286385536, 28303163008,
	28319938432, 28336716416, 28353494144, 28370271872, 28387044736, 28403825024, 28420601984, 28437379456,
	28454155904, 28470933376, 28487709568, 28504487296, 28521263744, 28538040704, 28554821248, 28571598464,
	28588364416, 28605153152, 28621927808, 28638707072, 28655484544, 28672261504, 28689036416, 28705814656,
	28722592384, 28739368576, 28756143232, 28772924032, 28789702016, 28806479488, 28823255936, 28840032896,
	28856811136, 28873587328, 28890365824, 28907141504, 28923916928, 28940697472, 28957473152, 28974251392,
	28991026304, 29007802496, 29024583296, 29041358464, 29058137728, 29074911104, 29091689344, 29108468608,
	29125245824, 29142018688, 29158800256, 29175577472, 29192350592, 29209131136, 29225903744, 29242685312,
	29259463808, 29276241536, 29293014656, 29309795456, 29326573184, 29343347584, 29360124544, 29376900736,
	29393681024, 29410457984, 29427236224, 29444011904, 29460790144, 29477567104, 29494344832, 29511122048,
	29527897216, 29544677248, 29561454464, 29578228352, 29595008896, 29611786112, 29628563072, 29645337472,
	29662116992, 29678893184, 29695672192, 29712449152, 29729222272, 29746003328, 29762780288, 29779554176,
	29796335488, 29813111936, 29829887872, 29846662784, 29863443328, 29880221312, 29896998016, 29913771392,
	29930551936, 29947326848, 29964105088, 29980883584, 29997660544, 30014439296, 30031210624, 30047989376,
	30064769408, 30081547136, 30098324864, 30115101824, 30131879552, 30148655744, 30165433472, 30182210944,
	30198986624, 30215761024, 30232542848, 30249318784, 30266096768, 30282860672, 30299650688, 30316428416,
	30333205888, 30349982336, 30366760064, 30383533952, 30400314496, 30417091456, 30433864064, 30450645376,
	30467419264, 30484194688, 30500978048, 30517755776, 30534532736, 30551309696, 30568079744, 30584860288,
	30601641856, 30618419072, 30635195264, 30651968896, 30668749952, 30685526656, 30702303872, 30719079808,
	30735859328, 30752636032, 30769412224, 30786190976, 30802963328, 30819744128, 30836521088, 30853300096,
	30870077312, 30886854016, 30903630976, 30920408192, 30937184896, 30953961856, 30970735232, 30987513472,
	31004294528, 31021070464, 31037847424, 31054623616, 31071400576, 31088176256, 31104958336, 31121734016,
	31138512256, 31155289472, 31172061056, 31188840064, 31205620352, 31222397056, 31239174784, 31255951744,
	31272727936, 31289507456, 31306283648, 31323059072, 31339838848, 31356616576, 31373393024, 31390159744,
	31406947456, 31423725184, 31440502144, 31457279872, 31474050688, 31490832512, 31507610752, 31524387712,
	31541163392, 31557943168, 31574720384, 31591497088, 31608274304, 31625051776, 31641828992, 31658605952,
	31675383424, 31692160384, 31708934528, 31725714304, 31742490496, 31759263104, 31776046208, 31792823168,
	31809600896, 31826373248, 31843154048, 31859929984, 31876701056, 31893487232, 31910263936, 31927040896,
	31943818624, 31960591744, 31977372032, 31994150528, 32010927232, 32027702144, 32044481408, 32061257344,
	32078036608, 32094813568, 32111591296, 32128364672, 32145145216, 32161922944, 32178698624, 32195476864,
	32212253056, 32229031552, 32245806464, 32262583424, 32279362432, 32296139648, 32312908928, 32329691776,
	32346472064, 32363248768, 32380022912, 32396793472, 32413577344, 32430358144, 32447134336, 32463910016,
	32480690048, 32497467008, 32514238336, 32531021696, 32547798656, 32564573824, 32581353344, 32598130304,
	32614906496, 32631684224, 32648458624, 32665238912, 32682015616, 32698792832, 32715569792, 32732348288,
	32749121408, 32765900416, 32782673024, 32799455872, 32816233088, 32833011584, 32849788544, 32866565504,
	32883336064, 32900119936, 32916894592, 32933674112, 32950451584, 32967228544, 32984005504, 33000781952,
	33017560448, 33034337152, 33051114368, 33067892608, 33084669824, 33101443456, 33118216832, 33135001472,
	33151776128, 33168552064, 33185329792, 33202107776, 33218886784, 33235664512, 33252437888, 33269217152,
	33285996416, 33302771584, 33319550848, 33336327296, 33353105024, 33369881728, 33386655616, 33403435904,
	33420212864, 33436989056, 33453768064, 33470541952, 33487316608, 33504098176, 33520875904, 33537651584,
	33554429056, 33571208576, 33587982976, 33604760192, 33621538432, 33638310016, 33655094912, 33671869568,
	33688648064, 33705425024, 33722203264, 33738980992, 33755758208, 33772533376, 33789312896, 33806087552,
	33822866816, 33839642752, 33856421504, 33873196928, 33889965952, 33906753152, 33923523968, 33940305536,
	33957081472, 33973854592, 33990633856, 34007415424, 34024191616, 34040971136, 34057746304, 34074521984,
	34091302016, 34108078208, 34124853376, 34141629056, 34158403712, 34175186048, 34191965824, 34208742784,
	34225510784, 34242297728, 34259073664, 34275851392, 34292624512, 34309403776, 34326181504, 34342957952,
	34359731072, 34376513152, 34393291904, 34410068096, 34426845568, 34443624064, 34460395136, 34477178752,
	34493953664, 34510722944, 34527508864, 34544283776, 34561063808, 34577842048, 34594616192, 34611396224,
	34628170112, 34644949888, 34661727616, 34678501504, 34695281024, 34712057728, 34728835712, 34745609344,
	34762385792, 34779163264, 34795942528, 34812719488, 34829497984, 34846275712, 34863053696, 34879831424,
	34896609152, 34913381504, 34930163584, 34946938496, 34963716992, 34980485248, 34997272192, 35014047104,
	35030824832, 35047604096, 35064377984, 35081157248, 35097934208, 35114709632, 35131489408, 35148262784,
	35165043328, 35181821824, 35198598784, 35215374976, 35232151424, 35248930688, 35265701248, 35282483072,
	35299259264, 35316039296, 35332813696, 35349589888, 35366362496, 35383147648, 35399925632, 35416698752,
	35433476224, 35450253184, 35467032704, 35483810176, 35500588672, 35517364864, 35534141312, 35550919808,
	35567694464, 35584474496, 35601250688, 35618028928, 35634802048, 35651583104, 35668356736, 35685137024,
	35701915264, 35718692224, 35735469184, 35752246144, 35769023872, 35785798784, 35802577024, 35819353984,
	35836133248, 35852910208, 35869681024, 35886464384, 35903239552, 35920015744, 35936796032, 35953561472,
	35970337664, 35987128192, 36003905408, 36020681344, 36037457536, 36054235264, 36071014016, 36087790208,
	36104567936, 36121342592, 36138123136, 36154895488, 36171675776, 36188452736, 36205228672, 36222008192,
	36238786432, 36255563392, 36272340352, 36289116544, 36305893504, 36322668416, 36339448448, 36356223104,
	36373003904, 36389780864, 36406558336, 36423335296, 36440110976, 36456889984, 36473666176, 36490443904,
	36507220352, 36523998592, 36540775552, 36557551232, 36574328704, 36591107456, 36607882112, 36624660608,
	36641437568, 36658216576, 36674991488, 36691769984, 36708546944, 36725321344, 36742102912, 36758879104,
	36775654016, 36792434048, 36809209984, 36825988736, 36842763904, 36859537024, 36876320128, 36893097856,
	36909872768, 36926651264, 36943428992, 36960202624, 36976980608, 36993759872, 37010536064, 37027312768,
	37044089728, 37060867456, 37077645952, 37094419328, 37111198336, 37127970944, 37144750208, 37161533312,
	37178308736, 37195085696, 37211857792, 37228641664, 37245418624, 37262196352, 37278972032, 37295744896,
	37312528256, 37329296768, 37346080384, 37362856576, 37379634304, 37396410496, 37413187712, 37429967488,
	37446745472, 37463522944, 37480298368, 37497075328, 37513849216, 37530631552, 37547408512, 37564183936,
	37580961664, 37597737088, 37614517888, 37631293312, 37648066432, 37664845952, 37681626496, 37698402688,
	37715179648, 37731957632, 37748735872, 37765504384, 37782290048, 37799064704, 37815843712, 37832621696,
	37849391488, 37866174848, 37882950016, 37899727744, 37916499584, 37933283456, 37950061696, 37966838912,
	37983614848, 38000393344, 38017171072, 38033940352, 38050725248, 38067501952, 38084279936, 38101049984,
	38117829248, 38134611584, 38151387776, 38168166272, 38184938368, 38201711488, 38218497664, 38235273344,
	38252051072, 38268829568, 38285604736, 38302381952, 38319160448, 38335937408, 38352715136, 38369489792,
	38386269056, 38403047296, 38419824512, 38436597376, 38453378176, 38470155904, 38486926208, 38503709824,
	38520486272, 38537264768, 38554041728, 38570814592, 38587596416, 38604373376, 38621146496, 38637924992,
	38654704768, 38671480448, 38688259712, 38705034112, 38721804416, 38738586496, 38755368832, 38772146048,
	38788922752, 38805698432, 38822475904, 38839252352, 38856032128, 38872803712, 38889586048, 38906363264,
	38923139456, 38939913088, 38956694144, 38973471872, 38990248832, 39007026304, 39023803264, 39040579712,
	39057356672, 39074135168, 39090912128, 39107690368, 39124465024, 39141243776, 39158021248, 39174796928,
	39191576192, 39208353664, 39225130624, 39241906048, 39258680704, 39275461504, 39292233856, 39309014144,
	39325791104, 39342564736, 39359341696, 39376125056, 39392900224, 39409679744, 39426453632, 39443234176,
	39460010368, 39476788352, 39493564288, 39510342272, 39527118976, 39543897728, 39560673664, 39577452416}

// cacheSizes is a lookup table for the abelethash verification cache size for the
// first 2048 epochs (i.e. 4000*2048 = 8,192,000 blocks).
var cacheSizes = [maxEpoch]uint64{
	16776896, 25165376, 33554368, 41942848, 50331584, 58720192, 67108672, 75497024,
	83886016, 84147776, 84409792, 84672064, 84934336, 85193792, 85458496, 85721024,
	85982656, 86244416, 86506688, 86769344, 87031744, 87293632, 87555392, 87816896,
	88079168, 88341824, 88603712, 88862912, 89128384, 89390272, 89652544, 89914816,
	90177088, 90438848, 90700096, 90963776, 91223744, 91486784, 91749824, 92012224,
	92273344, 92536768, 92798912, 93060544, 93322816, 93583936, 93845056, 94109504,
	94371776, 94632896, 94895552, 95158208, 95420224, 95681216, 95943872, 96203584,
	96468544, 96731072, 96992576, 97254848, 97517248, 97779392, 98041408, 98303168,
	98565568, 98827328, 99089728, 99352384, 99614272, 99876416, 100138048, 100401088,
	100662592, 100925248, 101187392, 101449408, 101711296, 101973824, 102235712, 102498112,
	102760384, 103021888, 103284032, 103545152, 103808576, 104070976, 104332736, 104594752,
	104854592, 105118912, 105381184, 105643072, 105903296, 106167872, 106429504, 106691392,
	106954304, 107216576, 107478464, 107739712, 108003136, 108265408, 108527168, 108789568,
	109049792, 109312576, 109572928, 109837888, 110099648, 110362432, 110624704, 110886208,
	111148864, 111410752, 111673024, 111933632, 112196416, 112457792, 112715968, 112983616,
	113244224, 113505472, 113770304, 114031552, 114294592, 114556864, 114818624, 115080512,
	115343296, 115605184, 115867072, 116128576, 116391488, 116652992, 116915648, 117178304,
	117440192, 117701824, 117964096, 118225984, 118489024, 118749632, 119012416, 119275328,
	119537344, 119798464, 120061376, 120321728, 120584512, 120848192, 121109056, 121372352,
	121634752, 121895744, 122157632, 122421184, 122682944, 122945344, 123207488, 123468736,
	123731264, 123993664, 124256192, 124518208, 124778048, 125041088, 125303744, 125566912,
	125829056, 126090304, 126352832, 126615232, 126876608, 127139392, 127401152, 127663552,
	127925696, 128188096, 128449856, 128712256, 128973632, 129236288, 129498944, 129760832,
	130023104, 130283968, 130547008, 130807616, 131071552, 131331776, 131594048, 131858368,
	132120256, 132382528, 132644672, 132905792, 133168832, 133429312, 133692992, 133954624,
	134217152, 134479808, 134741056, 135002944, 135265472, 135527872, 135787712, 136052416,
	136313792, 136576448, 136837952, 137099584, 137363392, 137625536, 137887424, 138149824,
	138411584, 138672832, 138936128, 139196864, 139460032, 139721024, 139984576, 140245696,
	140508352, 140769856, 141032768, 141294016, 141556544, 141819584, 142080448, 142342336,
	142606144, 142868288, 143129408, 143392448, 143653696, 143916992, 144177856, 144440768,
	144701888, 144965056, 145227584, 145489856, 145751488, 146011456, 146275264, 146538176,
	146800448, 147062336, 147324224, 147586624, 147848768, 148110784, 148373312, 148635584,
	148897088, 149159488, 149420224, 149683136, 149943616, 150208064, 150470464, 150732224,
	150993088, 151254976, 151519168, 151778752, 152042944, 152304704, 152567488, 152828992,
	153091648, 153353792, 153616192, 153878336, 154139968, 154402624, 154663616, 154926272,
	155188928, 155450816, 155712064, 155971136, 156237376, 156499264, 156761536, 157024064,
	157284416, 157545536, 157810496, 158071744, 158334656, 158596288, 158858048, 159121216,
	159381568, 159645632, 159906496, 160169536, 160430656, 160693952, 160956352, 161217344,
	161480512, 161742272, 162002752, 162266432, 162529216, 162790976, 163052096, 163314752,
	163577408, 163839296, 164100928, 164364224, 164625856, 164887616, 165150016, 165412672,
	165674944, 165936832, 166198336, 166461248, 166722496, 166985408, 167246656, 167508416,
	167771584, 168034112, 168295744, 168557632, 168819136, 169082176, 169344832, 169605952,
	169866304, 170131264, 170393536, 170655424, 170917696, 171179072, 171439936, 171702976,
	171966272, 172228288, 172489664, 172747712, 173014208, 173275072, 173539136, 173800768,
	174063424, 174325696, 174586816, 174849728, 175109696, 175374272, 175636288, 175898432,
	176159936, 176422592, 176684864, 176946496, 177209152, 177470528, 177731648, 177994816,
	178257472, 178518464, 178781888, 179044288, 179305024, 179568448, 179830208, 180092608,
	180354752, 180617152, 180877504, 181139264, 181402688, 181663168, 181926592, 182190016,
	182451904, 182713792, 182976064, 183237056, 183494848, 183762752, 184024768, 184286656,
	184548928, 184810816, 185072704, 185335616, 185596352, 185859904, 186121664, 186383552,
	186645952, 186907328, 187170112, 187429184, 187693504, 187957184, 188218304, 188481344,
	188743616, 189005248, 189265088, 189528128, 189791936, 190054208, 190315072, 190577984,
	190840768, 191102656, 191364032, 191626816, 191888192, 192148928, 192413504, 192674752,
	192937792, 193198912, 193462208, 193723456, 193985984, 194247232, 194508352, 194772544,
	195035072, 195296704, 195558592, 195818176, 196083392, 196345792, 196607552, 196869952,
	197130688, 197394368, 197656384, 197916608, 198180544, 198442432, 198705088, 198967232,
	199228352, 199491392, 199751744, 200014016, 200276672, 200540096, 200801984, 201062464,
	201326144, 201588544, 201850816, 202111552, 202374464, 202636352, 202898368, 203159872,
	203423296, 203685824, 203947712, 204208192, 204472256, 204733888, 204996544, 205258304,
	205517632, 205782208, 206044736, 206307008, 206569024, 206831168, 207093056, 207355328,
	207616832, 207879104, 208141888, 208404032, 208666048, 208927424, 209189824, 209451584,
	209715136, 209976896, 210239296, 210501568, 210763712, 211024832, 211287616, 211549376,
	211812032, 212074432, 212334016, 212597824, 212860352, 213120832, 213385024, 213645632,
	213909184, 214170688, 214433728, 214695232, 214956992, 215219776, 215482304, 215743552,
	216005312, 216267328, 216530752, 216790592, 217054528, 217316672, 217579072, 217838912,
	218102848, 218364736, 218627776, 218888896, 219151936, 219413056, 219675968, 219938624,
	220200128, 220461632, 220725184, 220987072, 221249216, 221510336, 221772736, 222031808,
	222297536, 222559936, 222820672, 223083968, 223345984, 223608512, 223869376, 224132672,
	224394944, 224657344, 224919488, 225181504, 225443776, 225704768, 225966784, 226229824,
	226491712, 226754368, 227015104, 227278528, 227539904, 227802944, 228065216, 228326464,
	228588736, 228850112, 229113152, 229375936, 229636928, 229894976, 230162368, 230424512,
	230684864, 230948416, 231210944, 231472448, 231733952, 231996736, 232259392, 232521664,
	232782272, 233043904, 233306816, 233569984, 233830592, 234092224, 234353984, 234618304,
	234880832, 235142464, 235403456, 235667392, 235928768, 236190272, 236453312, 236715712,
	236976448, 237239104, 237501632, 237764416, 238026688, 238286912, 238548032, 238812608,
	239075008, 239335232, 239599168, 239861312, 240122816, 240385856, 240647872, 240909632,
	241171904, 241433408, 241696192, 241958848, 242220224, 242481856, 242744896, 243005632,
	243268672, 243531712, 243793856, 244054592, 244316608, 244580032, 244841536, 245104448,
	245365312, 245628736, 245889856, 246152512, 246415168, 246675904, 246939584, 247199552,
	247463872, 247726016, 247987648, 248249536, 248512064, 248773312, 249036608, 249298624,
	249560512, 249822784, 250085312, 250345792, 250608704, 250870976, 251133632, 251395136,
	251657792, 251919424, 252182464, 252444224, 252706624, 252968512, 253227584, 253493056,
	253754432, 254017216, 254279488, 254541376, 254803264, 255065792, 255326528, 255589952,
	255851072, 256114624, 256374208, 256636096, 256900544, 257162176, 257424448, 257686976,
	257949632, 258211136, 258473408, 258734656, 258996544, 259260224, 259522112, 259784384,
	260045888, 260308544, 260570944, 260832448, 261092672, 261356864, 261619648, 261879872,
	262143424, 262404416, 262667968, 262928704, 263191744, 263454656, 263716672, 263978944,
	264241088, 264501184, 264764096, 265024576, 265287488, 265550528, 265813312, 266075968,
	266337728, 266600384, 266862272, 267124288, 267386432, 267648704, 267910592, 268172096,
	268435264, 268696256, 268959296, 269221312, 269482688, 269745856, 270007616, 270270272,
	270531904, 270791744, 271056832, 271317184, 271580992, 271843136, 272105408, 272367296,
	272629568, 272891456, 273153856, 273415616, 273677632, 273937088, 274200896, 274463296,
	274726208, 274988992, 275250496, 275513024, 275775296, 276037184, 276297664, 276560576,
	276822976, 277085632, 277347008, 277609664, 277868608, 278134336, 278395328, 278657728,
	278921152, 279182912, 279443776, 279706048, 279969728, 280230976, 280493632, 280755392,
	281018176, 281278912, 281542592, 281803712, 282066496, 282329024, 282590272, 282853184,
	283115072, 283377344, 283639744, 283901504, 284163136, 284426176, 284687296, 284950208,
	285211712, 285474368, 285735872, 285998656, 286260928, 286522688, 286784192, 287046976,
	287308352, 287571776, 287833792, 288095552, 288358208, 288618688, 288882112, 289143872,
	289406528, 289667648, 289931072, 290193088, 290453312, 290717248, 290978752, 291240896,
	291504064, 291765952, 292028096, 292290496, 292550848, 292813888, 293076928, 293338816,
	293600192, 293862848, 294123328, 294387136, 294649664, 294911168, 295173184, 295436096,
	295698112, 295960384, 296222656, 296481728, 296746816, 297008704, 297270592, 297533248,
	297794624, 298057664, 298318912, 298581056, 298843456, 299105728, 299367872, 299630528,
	299891776, 300154304, 300416192, 300678464, 300941248, 301202624, 301465408, 301727168,
	301989056, 302250304, 302513216, 302775232, 303036736, 303299008, 303562304, 303823424,
	304086976, 304348864, 304610752, 304873024, 305131072, 305397056, 305659712, 305920448,
	306182848, 306446144, 306707264, 306970304, 307231168, 307494848, 307756864, 308019136,
	308280512, 308543168, 308801728, 309067712, 309329344, 309591872, 309853888, 310114496,
	310377664, 310638784, 310901056, 311164864, 311427008, 311688896, 311950784, 312212416,
	312475456, 312736832, 312999488, 313261504, 313524032, 313785664, 314047424, 314310208,
	314570944, 314833216, 315096512, 315357376, 315619904, 315881792, 316145216, 316405952,
	316669376, 316929472, 317194048, 317454784, 317717824, 317979328, 318241856, 318504896,
	318766528, 319029056, 319291328, 319552448, 319815616, 320076992, 320339776, 320598976,
	320862656, 321125696, 321388352, 321650624, 321909568, 322174784, 322437056, 322698944,
	322960576, 323223104, 323484992, 323745728, 324009536, 324270656, 324534208, 324795712,
	325058368, 325319872, 325582528, 325844672, 326105792, 326369216, 326631232, 326893376,
	327154624, 327416384, 327679808, 327939776, 328201792, 328466368, 328727744, 328989632,
	329252416, 329514176, 329776192, 330038336, 330301376, 330563264, 330825536, 331087808,
	331349696, 331611584, 331873856, 332136256, 332398016, 332660672, 332922176, 333184832,
	333446336, 333708736, 333969728, 334231232, 334495424, 334756672, 335019968, 335281472,
	335544128, 335805248, 336066496, 336330688, 336592832, 336853568, 337116608, 337379264,
	337640896, 337903168, 338164928, 338426944, 338689984, 338952128, 339212992, 339472832,
	339736256, 340000576, 340262848, 340524736, 340786496, 341048128, 341311424, 341573312,
	341835328, 342097472, 342359744, 342621632, 342883648, 343146304, 343408064, 343667776,
	343931584, 344194112, 344455616, 344719168, 344980928, 345242048, 345504832, 345767872,
	346030016, 346292032, 346552768, 346815424, 347076544, 347338688, 347602624, 347864896,
	348126656, 348389312, 348650944, 348913216, 349175488, 349437248, 349699648, 349962176,
	350223296, 350486336, 350748224, 351010112, 351270848, 351534784, 351796672, 352056256,
	352321472, 352583104, 352844992, 353107904, 353369152, 353632064, 353893184, 354156224,
	354418496, 354679616, 354939712, 355204672, 355466816, 355728448, 355989824, 356252224,
	356514112, 356777152, 357037888, 357301696, 357564352, 357826496, 358088512, 358350656,
	358610624, 358874176, 359137216, 359398976, 359661376, 359922496, 360185792, 360447424,
	360708928, 360970432, 361234112, 361495744, 361758016, 362019776, 362282432, 362542784,
	362805056, 363069376, 363330368, 363593024, 363855424, 364115776, 364379584, 364641856,
	364904128, 365164736, 365428288, 365690816, 365950528, 366215104, 366476224, 366738752,
	366998848, 367262144, 367524928, 367787072, 368047808, 368311232, 368572352, 368836544,
	369096256, 369360832, 369622336, 369884864, 370147264, 370408768, 370671424, 370933568,
	371195584, 371457472, 371719232, 371982272, 372243392, 372504896, 372767936, 373029952,
	373291456, 373555136, 373816384, 374078912, 374341568, 374603072, 374865856, 375127744,
	375389888, 375651904, 375911104, 376175168, 376437184, 376699712, 376960832, 377225152,
	377485376, 377749312, 378007744, 378273472, 378534976, 378796736, 379059904, 379321792,
	379581632, 379845952, 380107456, 380369984, 380633024, 380893376, 381157312, 381418432,
	381681472, 381942464, 382204864, 382467136, 382729664, 382990912, 383254208, 383514944,
	383778496, 384039616, 384302656, 384564032, 384825536, 385089344, 385350976, 385613632,
	385875136, 386138048, 386399296, 386662208, 386923456, 387185984, 387448384, 387710528,
	387971392, 388234432, 388497344, 388759232, 389020864, 389278528, 389543872, 389808064,
	390067648, 390332224, 390592448, 390855616, 391118656, 391380928, 391643072, 391905088,
	392166976, 392427712, 392691008, 392953664, 393215936, 393477824, 393740224, 394001984,
	394264384, 394526656, 394788032, 395050688, 395311808, 395574208, 395836096, 396097984,
	396360512, 396623296, 396884672, 397148096, 397409728, 397671488, 397934144, 398196416,
	398458688, 398717248, 398981696, 399242944, 399504832, 399768256, 400031552, 400293056,
	400555328, 400817728, 401079872, 401341888, 401603392, 401865664, 402128576, 402389056,
	402652736, 402913216, 403176128, 403438912, 403701184, 403963072, 404225984, 404487488,
	404750272, 405012416, 405274432, 405536192, 405798208, 406059968, 406323136, 406584128,
	406846912, 407109056, 407371072, 407633216, 407895232, 408157888, 408420032, 408679616,
	408943936, 409206208, 409468736, 409730624, 409991872, 410255168, 410516032, 410779456,
	411041216, 411303232, 411563968, 411825472, 412090304, 412351936, 412612672, 412876096,
	413136832, 413401024, 413661632, 413923648, 414187328, 414449344, 414709184, 414972736,
	415233472, 415496896, 415759808, 416021696, 416282816, 416544704, 416808512, 417068992,
	417333184, 417593024, 417857344, 418119232, 418381504, 418643776, 418904384, 419167552,
	419428928, 419692352, 419954624, 420216128, 420478144, 420741056, 421002944, 421264576,
	421526848, 421789504, 422051776, 422313536, 422575168, 422837696, 423100096, 423361984,
	423623104, 423886784, 424148416, 424410944, 424672832, 424934464, 425196736, 425458624,
	425718848, 425983808, 426245824, 426506816, 426769472, 427030976, 427294144, 427556288,
	427818176, 428080448, 428343232, 428605376, 428866496, 429129152, 429388864, 429652672,
	429915712, 430177472, 430439104, 430702528, 430964672, 431225792, 431488192, 431750464,
	432012992, 432274496, 432536128, 432799424, 433061312, 433323712, 433585088, 433847104,
	434110016, 434372416, 434633536, 434896832, 435157952, 435420224, 435681472, 435944896,
	436207424, 436469056, 436731712, 436993472, 437254592, 437516864, 437780032, 438041792,
	438304576, 438566848, 438828608, 439090112, 439352384, 439615424, 439876544, 440134976,
	440401216, 440663744, 440924992, 441188288, 441450176, 441712192, 441973568, 442236736,
	442497344, 442760128, 443022784, 443284544, 443547584, 443809088, 444071872, 444333632,
	444596032, 444857152, 445118528, 445381952, 445644736, 445905472, 446168896, 446430784,
	446693056, 446955328, 447217216, 447478208, 447741248, 448003904, 448266176, 448528064,
	448789568, 449051968, 449313856, 449576128, 449838016, 450101056, 450362944, 450624704,
	450887104, 451149632, 451411648, 451672384, 451936064, 452197184, 452459968, 452722496,
	452984512, 453246272, 453508288, 453770816, 454032064, 454294592, 454557632, 454819136,
	455081408, 455342912, 455603648, 455864768, 456130496, 456392512, 456654656, 456916672,
	457178944, 457440448, 457702976, 457963328, 458227136, 458487872, 458751424, 459013952,
	459275584, 459537856, 459800512, 460061248, 460324672, 460586176, 460848832, 461111104,
	461372864, 461634112, 461897536, 462156736, 462420928, 462682816, 462945856, 463207744,
	463470272, 463731776, 463994816, 464256704, 464518976, 464780864, 465043136, 465305024,
	465567296, 465829568, 466091456, 466353856, 466615232, 466876736, 467139136, 467402176,
	467663296, 467926336, 468188608, 468451264, 468713408, 468974144, 469237696, 469499584,
	469760576, 470023744, 470285632, 470547136, 470810176, 471072064, 471333952, 471596096,
	471856192, 472120256, 472382912, 472645312, 472907584, 473169856, 473430592, 473690432,
	473955008, 474216256, 474479168, 474742592, 475003072, 475266496, 475529024, 475790272,
	476053184, 476315584, 476575168, 476838976, 477100864, 477363776, 477626048, 477887296,
	478150336, 478412608, 478674496, 478937024, 479196992, 479459776, 479723456, 479985472,
	480247616, 480509888, 480771008, 481033664, 481294144, 481557952, 481817792, 482082368,
	482344768, 482606144, 482868928, 483130688, 483393088, 483655232, 483917248, 484179392,
	484440896, 484702784, 484965952, 485227712, 485490496, 485751488, 486014912, 486276928,
	486537664, 486801344, 487063232, 487325632, 487587136, 487848896, 488111552, 488373056,
	488635712, 488897984, 489160384, 489422272, 489682496, 489946432, 490209088, 490468288,
	490733504, 490995136, 491255872, 491519552, 491781824, 492044096, 492306368, 492567616,
	492830656, 493091776, 493354816, 493617088, 493878208, 494141248, 494402752, 494665664,
	494926912, 495189824, 495451328, 495708608, 495975104, 496235456, 496499776, 496762688,
	497024576, 497286976, 497548864, 497810624, 498072128, 498333632, 498597824, 498857152,
	499122112, 499383616, 499646272, 499907776, 500170432, 500431552, 500694848, 500955968,
	501217088, 501481408, 501742784, 502004416, 502267328, 502528064, 502789696, 503053888,
	503315264, 503576384, 503836352, 504102848, 504364352, 504623296, 504888512, 505149248,
	505412032, 505675712, 505937728, 506198848, 506461888, 506723648, 506984384, 507248576,
	507509312, 507771328, 508034624, 508295488, 508558912, 508820288, 509083072, 509345728,
	509606848, 509868992, 510131264, 510393536, 510654784, 510915136, 511176896, 511440448,
	511705024, 511967168, 512228672, 512491456, 512752832, 513015488, 513277504, 513540032,
	513801664, 514063808, 514325824, 514588352, 514849856, 515112896, 515374784, 515636672,
	515897024, 516160576, 516423616, 516684992, 516945344, 517209536, 517472192, 517734208,
	517996096, 518257856, 518519744, 518782912, 519042752, 519305536, 519568064, 519830848,
	520092992, 520355392, 520616896, 520879808, 521141696, 521403968, 521665472, 521926336,
	522190016, 522452416, 522714176, 522977216, 523236928, 523500352, 523763648, 524024768,
	524287424, 524548928, 524811712, 525073984, 525336512, 525598144, 525860672, 526121536,
	526384832, 526647232, 526908992, 527169856, 527433152, 527695552, 527957312, 528219584,
	528481984, 528743744, 529005632, 529268416, 529529536, 529792832, 530054848, 530316992,
	530579008, 530840384, 531103168, 531365696, 531627968, 531889984, 532151744, 532414144,
	532676416, 532936256, 533200832, 533461568, 533724992, 533985856, 534246976, 534510784,
	534772928, 535035712, 535297472, 535559872, 535822016, 536083648, 536345792, 536608192,
	536869952, 537132352, 537395008, 537656512, 537918016, 538180672, 538442048, 538705472,
	538960064, 539228992, 539490496, 539754304, 540014912, 540277568, 540540736, 540801344,
	541065152, 541324352, 541589056, 541851584, 542112448, 542375872, 542638016, 542899648,
	543161792, 543424064, 543686464, 543948352, 544210496, 544471744, 544733248, 544995904,
	545257408, 545521472, 545783488, 546044608, 546306752, 546569152, 546832192, 547093696,
	547356352, 547617472, 547880512, 548142656, 548404672, 548665792, 548929088, 549191488,
	549453376, 549715136, 549977024, 550238272, 550501568, 550764224, 551026624, 551288768,
	551548736, 551812544, 552074816, 552337216, 552598976, 552861632, 553122112, 553382848,
	553646528, 553909696, 554172352, 554433472, 554695744, 554958784, 555220928, 555481408,
	555745088, 556006592, 556268096, 556531648, 556793152, 557054144, 557317952, 557579584,
	557842112, 558102208, 558366656, 558628544, 558889792, 559150528, 559414976, 559676864,
	559939136, 560201536, 560462272, 560725696, 560987968, 561249856, 561511616, 561774272,
	562035008, 562298432, 562560448, 562821568, 563084864, 563346496, 563609152, 563871424,
	564132928, 564395584, 564657088, 564920128, 565181504, 565441472, 565705024, 565963712,
	566230976, 566492096, 566754368, 567016768, 567276992, 567539008, 567803584, 568064192,
	568326848, 568587328, 568851776, 569114176, 569376448, 569638592, 569900224, 570162752,
	570424768, 570686528, 570948544, 571211584, 571472192, 571735616, 571997248, 572259392,
	572522432, 572784448, 573046592, 573306688, 573570496, 573832768, 574094656, 574353856,
	574616384, 574881344, 575140672, 575406016, 575665984, 575929664, 576191552, 576453568,
	576715712, 576978112, 577239232, 577502656, 577763776, 578026048, 578289344, 578550848,
	578813888, 579075136, 579338176, 579599168, 579862336, 580124224, 580386496, 580648384,
	580910912, 581173184, 581433536, 581697344, 581958976, 582220864, 582482752, 582744128,
	583006912, 583269952, 583531456, 583794368, 584056768, 584318656, 584580928, 584842816,
	585102656, 585366976, 585629504, 585891392, 586153664, 586415296, 586678208, 586939456,
	587202368, 587464256, 587725888, 587988032, 588251072, 588513088, 588773056, 589037248,
	589298368, 589560896, 589822144, 590085952, 590348224, 590610368, 590872384, 591134528,
	591393472, 591658688, 591920704, 592183232, 592445248, 592706624, 592969408, 593231552,
	593492672, 593754944, 594017728, 594279232, 594538432, 594804416, 595066048, 595328192,
	595590208, 595851968, 596115392, 596377024, 596639552, 596900672, 597163456, 597425344,
	597687232, 597948608, 598212544, 598474432, 598735936, 598998592, 599260352, 599522752,
	599784256, 600047296, 600309056, 600568768, 600833984, 601093312, 601357376, 601617728,
	601881536, 602139712, 602406592, 602668096, 602930752, 603191872, 603455296, 603717568,
	603979456, 604240576, 604502848, 604766144, 605027776, 605288384, 605550656, 605813696,
	606076096, 606338624, 606601024, 606862016, 607125184, 607387072, 607649344, 607911872,
	608172608, 608436032, 608698304, 608958656, 609220672, 609483712, 609745984, 610008128,
	610270016, 610533184, 610795072, 611056064, 611317568, 611580352, 611843264, 612105152,
	612366016, 612626752, 612892352, 613153472, 613416896, 613678528, 613940032, 614203328,
	614464832, 614727488, 614988992, 615251264, 615511744, 615776192, 616037824, 616300352,
	616562368, 616824256, 617086784, 617349056, 617610944, 617872832, 618135104, 618396736}
